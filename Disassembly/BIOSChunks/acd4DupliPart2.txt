ACD4: 21 B6 FD    ld   hl,MSG_GETSRC    ; Prompt user for source disk
ACD7: CD 5A AE    call TK_WRLINE
ACDA: CD 2D AE   DP_GETSRC: call KEYORESC   ; Get src drive letter
ACDD: CD 48 AE    call TK_CHKDRVL   ; Check it's a drive
ACE0: 30 F8       jr   nc,DP_GETSRC ; Nope loop back
ACE2: 32 C0 AE    ld   (DUPSRCDRV),a ; Save away apple style ($60=A,$E0=B for DiskII)
ACE5: 21 C7 AE    ld   hl,SRCCPMDRV ;Save away CPM drive
ACE8: 71          ld   (hl),c
ACE9: CD 37 A8    call DRVISDISK2   ; Get the disk drive device type
ACEC: 32 C6 AE    ld   (SRCDRVTYP),a ; Save it away
ACEF: 21 DC FD   DP_GETDST: ld   hl,MSG_GETDST  ; Prompt user for destination disk
ACF2: CD 5A AE    call TK_WRLINE
ACF5: CD 2D AE    call KEYORESC     ; Get dest drive letter
ACF8: CD 48 AE    call TK_CHKDRVL   ; Is it a drive
ACFB: 30 F2       jr   nc,DP_GETDST ; Loop until user does something
ACFD: 32 C1 AE    ld   (DUPDSTDRV),a ; Save away drive for later
AD00: CD 37 A8    call DRVISDISK2   ; Get drive device type
AD03: 21 C6 AE    ld   hl,SRCDRVTYP ; Same type as source
AD06: BE          cp   (hl)
AD07: 28 0E       jr   z,DP_SAMEDRV
AD09: 21 C0 FE    DP_WNRGDISK: ld   hl,MSG_WRNGDSK   ; Tell the user disk types don't match
AD0C: CD 5A AE    call TK_WRLINE        
AD0F: CD 2D AE    call KEYORESC         ; Do they want to try again
AD12: FE 79       cp   'y'
AD14: C0          ret  nz               ; Nope, go home
AD15: 18 87       jr   DUPLICATE        ; Yes ask them again
AD17: 21 23 00    DP_SAMEDRV: ld   hl,35    ; Assume we're a DISK II
AD1A: 22 C4 AE    ld   (DUPDSTTRKS),hl
AD1D: 22 C2 AE    ld   (DUPSRCTRKS),hl
AD20: 22 B4 AD    ld   (DP_CURTRACK+1),hl
AD23: 3A C6 AE    ld   a,(SRCDRVTYP)    ; Get drive type
AD26: FE 02       cp   2    ; Is it a disk II
AD28: 28 1C       jr   z,DP_CHKSAME ; See if it's the same drive
AD2A: CD CF AE    call GETDPB   ; Get number of tracks
AD2D: 22 C4 AE    ld   (DUPDSTTRKS),hl  ;Save away destination details
AD30: 22 C2 AE    ld   (DUPSRCTRKS),hl
AD33: 22 B4 AD    ld   (DP_CURTRACK+1),hl
AD36: 3A C7 AE    ld   a,(SRCCPMDRV)    ;Get the src drive
AD39: 4F          ld   c,a
AD3A: CD CF AE    call GETDPB      ; Get number of tracks on source
AD3D: ED 5B C4 AE ld   de,(DUPDSTTRKS)  ; Check against destination
AD41: B7          or   a
AD42: ED 52       sbc  hl,de        ; Same number of tracks
AD44: 20 C3       jr   nz,DP_WNRGDISK   ; Nope tell the user it's wrong
AD46: 21 C1 AE   DP_CHKSAME: ld   hl,DUPDSTDRV  ; Check the destination
AD49: 3A C0 AE    ld   a,(DUPSRCDRV)    ; Is it the same drive as source
AD4C: BE          cp   (hl)
AD4D: 28 0F       jr   z,DP_NEXT    ; Yes go ask for source disk
AD4F: CB C6       set  0,(hl)       ; Set the flag
AD51: CD C9 AE    call DP_PROMPT    ; Won't be zero
AD54: 28 0D       jr   z,DP_ASKSRC
AD56: 21 02 FE    ld   hl,MSG_INSDSKS ; Prompt for disks
AD59: CD 5A AE    call TK_WRLINE
AD5C: 18 0B       jr   DP_RDSRC
AD5E: CD C9 AE   DP_NEXT: call DP_PROMPT    ;See if we need to prompt user
AD61: 20 09       jr   nz,DP_RDSRC      ; Not zero we need to tell user
AD63: 21 74 FE   DP_ASKSRC: ld   hl,MSG_SRCDSK
AD66: CD 5A AE    call TK_WRLINE
AD69: CD 2D AE   DP_RDSRC: call KEYORESC
AD6C: CD 57 AE    call TK_WRTDUP    ; Tell them we're duplicating
AD6F: 3A C0 AE    ld   a,(DUPSRCDRV)    ; Read in some data from source
AD72: 21 C2 AE    ld   hl,DUPSRCTRKS    ; Start here
AD75: 16 05       ld   d,DSKOP_RDTRK    ; Read in a track
AD77: CD F4 AD    call DP_TRKOP
AD7A: 20 4A       jr   nz,DP_ERR_CHK    ; Not zero go do error
AD7C: CD C9 AE    call DP_PROMPT
AD7F: 20 0C       jr   nz,DP_WRDST
AD81: 21 9A FE    ld   hl,MSG_DSTDSK    ; Prompt user for destination 
AD84: CD 5A AE    call TK_WRLINE
AD87: CD 2D AE    call KEYORESC
AD8A: CD 57 AE    call TK_WRTDUP ; Tell them we're duplicating
AD8D: 3A C1 AE   DP_WRDST: ld   a,(DUPDSTDRV)    ; Get destination drive
AD90: 21 C4 AE    ld   hl,DUPDSTTRKS    ; Track we're writing
AD93: 16 04       ld   d,DSKOP_WRTRK    ; We're writing
AD95: CD F4 AD    call DP_TRKOP     ; Go read 20K of data
AD98: 28 24       jr   z,DP_NEXTCHK ; Bugger we had an error
AD9A: 21 C0 AE    ld   hl,DUPSRCDRV ; Get our we've already formatted flag
AD9D: CB 46       bit  0,(hl)       ; set zero flag if we've been here before
AD9F: CB C6       set  0,(hl)       ; Set flag in variable
ADA1: 20 23       jr   nz,DP_ERR_CHK ; may tell the user
ADA3: 3E 03       ld   a,DSKOP_FMT  ; Set up for format
ADA5: 32 88 F3    ld   (DISK_OP),a
ADA8: 21 1E FD    ld   hl,MSG_FMTING    ; Tell the user we're formatting
ADAB: CD 5A AE    call TK_WRLINE
ADAE: CD 1C AE    call CALLDISK     ; Do the operation
ADB1: 20 13       jr   nz,DP_ERR_CHK ; Tell the user if we had error
ADB3: 21 00 00   DP_CURTRACK: ld   hl,$0000
ADB6: 22 C4 AE    ld   (DUPDSTTRKS),hl
ADB9: 22 C2 AE    ld   (DUPSRCTRKS),hl
ADBC: 18 A0       jr   DP_NEXT
ADBE: 2A C4 AE   DP_NEXTCHK: ld   hl,(DUPDSTTRKS)   ; More tracks to do
ADC1: 7C          ld   a,h ; Zero?
ADC2: B5          or   l
ADC3: C2 5E AD    jp   nz,DP_NEXT ; Nope loop around
ADC6: 21 4E FE   DP_ERR_CHK: ld   hl,MSG_DUPOK  ; Was it okay, ask user if again
ADC9: 28 0C       jr   z,DP_LASTMSG ; No error just display
ADCB: FE 10       cp   10H          ; Write protected?
ADCD: 20 05       jr   nz,DP_DISKERR ; Nope, Generic message
ADCF: 21 90 FD    ld   hl,ERR_WRPRO  ; Yep write protected
ADD2: 18 03       jr   DP_LASTMSG   ; Tell user
ADD4: 21 6A FD   DP_DISKERR: ld   hl,ERR_DSKERR ; Disk error
ADD7: CD 5A AE   DP_LASTMSG: call TK_WRLINE ; Show user
ADDA: CD 2D AE    call KEYORESC ; Do it again?
ADDD: FE 79       cp   'y'
ADDF: 20 11       jr   nz,DP_EXIT
ADE1: 3A C8 AE    ld   a,($AEC8)
ADE4: 4F          ld   c,a
ADE5: 21 C0 AE    ld   hl,DUPSRCDRV
ADE8: CB 86       res  0,(hl)
ADEA: 3A C1 AE    ld   a,(DUPDSTDRV)
ADED: CB 87       res  0,a
ADEF: C3 00 AD    jp   $AD00
ADF2: AF         DP_EXIT: xor  a
ADF3: C9          ret
ADF4: 06 05      DP_TRKOP: ld   b,$05
ADF6: CB 87       res  0,a
ADF8: 32 84 F3    ld   (DISK_DRV),a
ADFB: 7A          ld   a,d
ADFC: 32 88 F3    ld   (DISK_OP),a
ADFF: 3E 1E       ld   a,$1E
AE01: 32 82 F3    ld   ($F382),a
AE04: 7E          ld   a,(hl)
AE05: 3D          dec  a
AE06: 32 80 F3    ld   (DISK_TRKL),a
AE09: CD 1C AE    call CALLDISK
AE0C: C0          ret  nz
AE0D: 35          dec  (hl)
AE0E: C8          ret  z
AE0F: 3A 00 E0    ld   a,(KBD)
AE12: B7          or   a
AE13: D1          pop  de
AE14: FC 2D AE    call m,KEYORESC
AE17: D5          push de
AE18: 10 EA       djnz $AE04
AE1A: AF          xor  a
AE1B: C9          ret
